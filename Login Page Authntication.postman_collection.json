{
	"info": {
		"_postman_id": "bfdbf123-1d23-4fc8-9aef-40a965f20abe",
		"name": "Login Page Authntication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31157800"
	},
	"item": [
		{
			"name": "EmptyUsername",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"\",\r\n  \"password\": \"bigbang!777\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:32768/api/session#post-apisession",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "32768",
					"path": [
						"api",
						"session"
					],
					"hash": "post-apisession"
				}
			},
			"response": []
		},
		{
			"name": "EmptyUsernameANDPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"\",\r\n  \"password\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:32768/api/session#post-apisession",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "32768",
					"path": [
						"api",
						"session"
					],
					"hash": "post-apisession"
				}
			},
			"response": []
		},
		{
			"name": "EmptyUsernameANDWrongPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"\",\r\n  \"password\": \"Ahmad\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:32768/api/session#post-apisession",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "32768",
					"path": [
						"api",
						"session"
					],
					"hash": "post-apisession"
				}
			},
			"response": []
		},
		{
			"name": "EmptyPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.globals.get(\"variable_key\");\r",
							"pm.variables.get(\"variable_key\");\r",
							"pm.collectionVariables.get(\"variable_key\");\r",
							"pm.environment.set(\"variable_key\", \"variable_value\");\r",
							"pm.globals.set(\"variable_key\", \"variable_value\");\r",
							"pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
							"pm.environment.unset(\"variable_key\");\r",
							"pm.globals.unset(\"variable_key\");\r",
							"pm.collectionVariables.unset(\"variable_key\");\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"response_body_string\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							"var data1 = [true, false];\r",
							"var data2 = [true, 123];\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
							"    pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"f219498@.nu.edu.pk\",\r\n  \"password\": \"\"\r\n  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:32768/api/session#post-apisession",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "32768",
					"path": [
						"api",
						"session"
					],
					"hash": "post-apisession"
				}
			},
			"response": []
		},
		{
			"name": "InvalidPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.globals.get(\"variable_key\");\r",
							"pm.variables.get(\"variable_key\");\r",
							"pm.collectionVariables.get(\"variable_key\");\r",
							"pm.environment.set(\"variable_key\", \"variable_value\");\r",
							"pm.globals.set(\"variable_key\", \"variable_value\");\r",
							"pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
							"pm.environment.unset(\"variable_key\");\r",
							"pm.globals.unset(\"variable_key\");\r",
							"pm.collectionVariables.unset(\"variable_key\");\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"response_body_string\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							"var data1 = [true, false];\r",
							"var data2 = [true, 123];\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
							"    pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"f219498@.nu.edu.pk\",\r\n  \"password\": \"Ahmad\"\r\n  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:32768/api/session#post-apisession",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "32768",
					"path": [
						"api",
						"session"
					],
					"hash": "post-apisession"
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:32768/api/session/",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"f219498@.nu.edu.pk\",\r\n  \"password\": \"bigbang!444\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:32768/api/session/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "32768",
					"path": [
						"api",
						"session",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "https://ogp.me/ns#",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ogp.me/ns#",
					"protocol": "https",
					"host": [
						"ogp",
						"me"
					],
					"path": [
						"ns"
					],
					"hash": ""
				}
			},
			"response": []
		},
		{
			"name": "https://www.metabase.com/docs/latest/configuring-metabase/environment-variables#mb_api_key",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.metabase.com/docs/latest/configuring-metabase/environment-variables#mb_api_key",
					"protocol": "https",
					"host": [
						"www",
						"metabase",
						"com"
					],
					"path": [
						"docs",
						"latest",
						"configuring-metabase",
						"environment-variables"
					],
					"hash": "mb_api_key"
				}
			},
			"response": []
		}
	]
}